"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[710],{38820:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateToken","desc":"Initiating your new API.  You can start calling API endpoints directly after from the table that gets returned.","params":[{"name":"{TokenData}","desc":"","lua_type":"NewToken"}],"returns":[{"desc":"","lua_type":"APIpoints"}],"function_type":"static","source":{"line":433,"path":"src/init.lua"}},{"name":"GetToken","desc":"A way to get your APIpoints through the Token name.","params":[{"name":"TokenName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"APIpoints"}],"function_type":"static","source":{"line":477,"path":"src/init.lua"}},{"name":"DeleteToken","desc":"A way to delete your API key data from the code.\\n:::note \ud83d\udc80\\n*if you actually find a use for this, please tell me.  minecraft2fun on Discord.*\\n:::","params":[{"name":"TokenName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":498,"path":"src/init.lua"}},{"name":"QuickClean","desc":"Deletes all API Key data immediately, great if you really want to be careful.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","tags":["Unreleased"],"source":{"line":515,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"NewToken","desc":":::info Name field\\nAlthough the \\"Name\\" field is not required, is is highly suggested to have it.  Especially when having two or more instances running.  Without the name field the first token created will receive the name \\"Primary\\", and the second to be made will receive \\"Secondary\\".  **Any after that will error.**\\n:::","fields":[{"name":"Name?","lua_type":"\\"Name\\"","desc":"The name of the new token."},{"name":"ApiKey","lua_type":"\\"ApiKey\\"","desc":"The long ID when generating your API key."},{"name":"KeyId","lua_type":"\\"KeyId\\"","desc":"the short ID when generating your API key."},{"name":"GroupId","lua_type":"\\"GroupId\\"","desc":"Your [Roblox](https://roblox.com) group\'s ID."}],"source":{"line":19,"path":"src/init.lua"}},{"name":"XpReturn","desc":"","fields":[{"name":"Code","lua_type":"\\"Success\\" | \\"NotSetup\\" | \\"Failed\\",","desc":""},{"name":"OldAmount","lua_type":"number,","desc":""},{"name":"NewAmount","lua_type":"number,","desc":""}],"source":{"line":41,"path":"src/init.lua"}},{"name":"RankReturn","desc":"","fields":[{"name":"id","lua_type":"number,","desc":""},{"name":"locked","lua_type":"boolean,","desc":""},{"name":"name","lua_type":"string,","desc":""},{"name":"perm","lua_type":"number,","desc":""},{"name":"rank","lua_type":"number,","desc":""},{"name":"xp","lua_type":"number,","desc":""},{"name":"prefix","lua_type":"string,","desc":""},{"name":"prefixEnabled","lua_type":"boolean,","desc":""},{"name":"role","lua_type":"string,","desc":""},{"name":"roleEnabled:","lua_type":"boolean,","desc":""}],"source":{"line":69,"path":"src/init.lua"}},{"name":"RoleReturn","desc":"","fields":[{"name":"id","lua_type":"number,","desc":""},{"name":"name","lua_type":"string,","desc":""},{"name":"rank","lua_type":"number,","desc":""},{"name":"memberCount","lua_type":"number,","desc":""},{"name":"ID","lua_type":"number,","desc":""}],"source":{"line":87,"path":"src/init.lua"}},{"name":"MedalReturn","desc":"","fields":[{"name":"Description","lua_type":"string,","desc":""},{"name":"Name","lua_type":"string,","desc":""},{"name":"Emoji","lua_type":"string,","desc":""},{"name":"Id","lua_type":"number,","desc":""}],"source":{"line":103,"path":"src/init.lua"}},{"name":"UserMedalReturn","desc":"","fields":[{"name":"amount","lua_type":"number","desc":""},{"name":"id","lua_type":"string | number,","desc":""}],"source":{"line":115,"path":"src/init.lua"}},{"name":"APIpoints","desc":"","lua_type":"{ XPendpoints & RANKendpoints &  MEDALSendpoints & PENDINGendpoints}","source":{"line":161,"path":"src/init.lua"}},{"name":"XPendpoints","desc":"","fields":[{"name":"GetXp","lua_type":"(userId: number | string) -> number","desc":""},{"name":"IncrementXp","lua_type":"(userId: number | string, amount: number | string) -> XpReturn,","desc":""},{"name":"SetXp","lua_type":"(userId: number | string, amount: number | string) -> XpReturn,","desc":""}],"source":{"line":169,"path":"src/init.lua"}},{"name":"RANKendpoints","desc":"","fields":[{"name":"GetUserRank","lua_type":"(userId: number | string) -> { Previous: RankReturn | nil, Current: RankReturn | nil, Next: RankReturn | nil },","desc":""},{"name":"GetAllRanks","lua_type":"() -> { <RankReturn> },","desc":""},{"name":"PromoteUser","lua_type":"(userId: number | string) -> { newRole: RoleReturn | nil, oldRole: RoleReturn | nil },","desc":""},{"name":"DemoteUser","lua_type":"(userId: number | string) -> { newRole: RoleReturn | nil, oldRole: RoleReturn | nil },","desc":""},{"name":"SetUserRank","lua_type":"(userId number | string, rank number | string) -> { newRole: RoleReturn | nil, oldRole: RoleReturn | nil }","desc":""}],"source":{"line":179,"path":"src/init.lua"}},{"name":"MEDALSendpoints","desc":"","fields":[{"name":"GetAllMedals","lua_type":"() -> { <MedalReturn> },","desc":""},{"name":"GetUserMedals","lua_type":"(userId: number | string) -> { MedalReturn & UserMedalReturn },","desc":""},{"name":"GetUserMedalCount","lua_type":"(userId: number | string, medalId: number | string) -> { UserMedalReturn | \\"nomedal\\" },","desc":""},{"name":"AddUserMedal","lua_type":"(userId: number | string, medalId: number | string) -> \\"added1\\" | \\"createdStore\\",","desc":""},{"name":"RemoveUserMedal","lua_type":"(userId: number | string, medalId: number | string) -> \\"removed1\\" | \\"deletedStore\\" | \\"doesntHaveMedal\\",","desc":""}],"source":{"line":189,"path":"src/init.lua"}},{"name":"PENDINGendpoints","desc":"Used to accept or decline pending users into your group.","fields":[{"name":"AcceptUser","lua_type":"(userId: number | string) -> boolean,","desc":""},{"name":"DeclineUser","lua_type":"(userId: number | string) -> boolean,","desc":""}],"source":{"line":197,"path":"src/init.lua"}}],"name":"UtilServer","desc":"Everything that runs on the server.  Every function yields.","realm":["Server"],"source":{"line":6,"path":"src/init.lua"}}')}}]);