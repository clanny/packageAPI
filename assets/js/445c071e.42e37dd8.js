"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[311],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(t),k=r,m=c["".concat(u,".").concat(k)]||c[k]||d[k]||l;return t?a.createElement(m,o(o({ref:n},s),{},{components:t})):a.createElement(m,o({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=k;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},39664:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const l={sidebar_position:4},o="Using our modern API Package",i={unversionedId:"packageusage",id:"packageusage",title:"Using our modern API Package",description:"We will explain how to use this package now.",source:"@site/docs/packageusage.md",sourceDirName:".",slug:"/packageusage",permalink:"/package/docs/packageusage",draft:!1,editUrl:"https://github.com/clanny/packageAPI/edit/master/docs/packageusage.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/package/docs/installation"}},u={},p=[{value:"Calling the module",id:"calling-the-module",level:2},{value:"Putting in your API keys.",id:"putting-in-your-api-keys",level:2},{value:"<code>.CreateToken</code> variables",id:"createtoken-variables",level:3},{value:"Using Token Name to get API Endpoints",id:"using-token-name-to-get-api-endpoints",level:2},{value:"Calling API endpoints",id:"calling-api-endpoints",level:2},{value:"From <code>.CreateToken</code>",id:"from-createtoken",level:3},{value:"From <code>.GetToken</code>",id:"from-gettoken",level:3},{value:"Deleting API Keys",id:"deleting-api-keys",level:2},{value:"Quick Delete - UNRELEASED",id:"quick-delete---unreleased",level:2}],s={toc:p},c="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-our-modern-api-package"},"Using our modern API Package"),(0,r.kt)("p",null,"We will explain how to use this package now."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Please make sure the scripts are in ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerStorage")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerScriptService")," ro prevent your API keys from being leaked.")),(0,r.kt)("p",null,"In these examples the script will be in ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerStorage")," and named ",(0,r.kt)("inlineCode",{parentName:"p"},"Clanny"),"."),(0,r.kt)("p",null,"If you need assistance at any time, join our ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/AgQuFj4qV3"},"Support Server"),"."),(0,r.kt)("h2",{id:"calling-the-module"},"Calling the module"),(0,r.kt)("p",null,"To call the module simply ",(0,r.kt)("inlineCode",{parentName:"p"},"require()")," the script, it may look something like this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local Clanny = require(game.ServerStorage.Clanny)\n")),(0,r.kt)("h2",{id:"putting-in-your-api-keys"},"Putting in your API keys."),(0,r.kt)("p",null,"API keys can be put in whenever you want, but if you try to call an endpoint before creating the key your code will error.  If you're expecting to use the API from the same script running ",(0,r.kt)("inlineCode",{parentName:"p"},".CreateToken")," make sure to make it a variable so save time later since you need the variable to call API Endpoints."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Clanny = require(game.ServerStorage.Clanny)\nlocal token = Clanny.CreateToken({\n    Name="",--optional\n    ApiKey="",\n    KeyId="",\n    GroupId=0\n})\n')),(0,r.kt)("h3",{id:"createtoken-variables"},(0,r.kt)("inlineCode",{parentName:"h3"},".CreateToken")," variables"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Name:"),' An optional field so you can name your tokens, tokens can be used later to get your APIendpoints, or delete your API Key from the scripts.  Will default to "Primary" and then "Secondary" if no name is given.  If you make more than two Tokens without a name, the third will return an error.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ApiKey:")," A Required field that is the long ID you received from creating your API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"KeyId:")," A Required field that is the short ID you received from creating your API."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GroupId:")," A Required field that is you Roblox group's ID, can be found in the group page URL.")),(0,r.kt)("h2",{id:"using-token-name-to-get-api-endpoints"},"Using Token Name to get API Endpoints"),(0,r.kt)("p",null,"As stated above, you either need a variable tied to a ",(0,r.kt)("inlineCode",{parentName:"p"},".CreateToken")," or this ",(0,r.kt)("inlineCode",{parentName:"p"},".GetToken")," function to be able to call the API."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This function can be called from a different script than where ",(0,r.kt)("inlineCode",{parentName:"li"},".CreateToken")," was called so ",(0,r.kt)("inlineCode",{parentName:"li"},".CreateToken")," only has to be called once per API Key.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local Clanny = require(game.ServerStorage.Clanny)\nlocal token = Clanny.GetToken(TokenName)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TokenName")," is either the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," field used in ",(0,r.kt)("inlineCode",{parentName:"li"},".CreateToken"),' or the default value of "Primary", "Secondary".')),(0,r.kt)("h2",{id:"calling-api-endpoints"},"Calling API endpoints"),(0,r.kt)("p",null,"Remember, API endpoints can only be called from the two functions below"),(0,r.kt)("h3",{id:"from-createtoken"},"From ",(0,r.kt)("inlineCode",{parentName:"h3"},".CreateToken")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Clanny = require(game.ServerStorage.Clanny)\nlocal token = Clanny.CreateToken({\n    Name="",--optional\n    ApiKey="",\n    KeyId="",\n    GroupId=0\n})\nprint(token.XP.GetXp(UserId))\n')),(0,r.kt)("h3",{id:"from-gettoken"},"From ",(0,r.kt)("inlineCode",{parentName:"h3"},".GetToken")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local Clanny = require(game.ServerStorage.Clanny)\nlocal token = Clanny.GetToken(TokenName)\nprint(token.XP.GetXp(UserId))\n")),(0,r.kt)("p",null,"Or, if you want to make it dynamic."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Clanny = require(game.ServerStorage.Clanny)\nlocal function GetXp(TokenName:string, UserId:number | string)\n    return Clanny.GetToken(TokenName).XP.GetXp(UserId)\nend\nprint(GetXp("Primary", 1), GetXp("Secondary", 5))\n')),(0,r.kt)("h2",{id:"deleting-api-keys"},"Deleting API Keys"),(0,r.kt)("p",null,"This will cause any API calls from the deleted token to error."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local Clanny = require(game.ServerStorage.Clanny)\nClanny.DeleteToken(TokenName)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TokenName")," is either the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," field used in ",(0,r.kt)("inlineCode",{parentName:"li"},".CreateToken"),' or the default value of "Primary", "Secondary".')),(0,r.kt)("h2",{id:"quick-delete---unreleased"},"Quick Delete - UNRELEASED"),(0,r.kt)("p",null,"Quickly deletes all API Keys and Token data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local Clanny = require(game.ServerStorage.Clanny)\nClanny.QuickDelete()\n")))}d.isMDXComponent=!0}}]);